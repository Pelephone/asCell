/** Copyright(c) 2011 the original author or authors.** Licensed under the Apache License, Version 2.0 (the "License");* you may not use this file except in compliance with the License.* You may obtain a copy of the License at**     http://www.apache.org/licenses/LICENSE-2.0** Unless required by applicable law or agreed to in writing, software* distributed under the License is distributed on an "AS IS" BASIS,* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,* either express or implied. See the License for the specific language* governing permissions and limitations under the License.*/package netSocket{	import flash.events.Event;	/**	 *	 * @author Michael.Huang	 *	 */	public class SocketConnectionEvent extends Event	{		/**		 * 连接失败		 */		public static const CONN_FAILURE:String = "connfailure";		/**		 * 连接成功		 */		public static const CONN_SUCCESS:String = "connSuccess";				/**		 *		 * 接收到服务器端数据		 *		 */		public static const RECEIVE_MESSAGE:String = "receiveMessage";				/**		 * IO错误		 */		public static const IO_ERROR:String = "ioError";		/**		 * 安全性错误		 */		public static const SECURITY_ERROR:String = "securityError";		/**		 * 其他错误		 */		public static const OTHER_ERROR:String = "otherError";		/**		 * 关闭错误		 */		public static const CLOSE_ERROR:String = "closeError";		/**		 * 主动关闭成功		 */				public static const CLOSE_SUCCESS:String = "closeSuccess";		public function SocketConnectionEvent(type:String, bubbles:Boolean = false, cancelable:Boolean = false, msgData:MessageData = null)		{			super(type, bubbles, cancelable);		}		/**		 *		 * 错误类型		 */		public var faildType:String = "otherError";		/**		 *		 * 收发事件的消息包		 *		 */		public var msgData:MessageData;				/**		 * 收到消息时的时间戳 		 */				public var timestamp:int;			}}