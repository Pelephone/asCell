<root>
	<!-- 
	/**
	 * UI编辑控制器,可对场景上的UI对象进行调整坐标等属性
	 * 键盘ctrl+1,2,3,4分别带表界面上四个按钮点击的效果。ctrl+D，通过当前项的父类选下一个UI对象
	 * 键盘上下左右键可调节选中对象的x,y坐标；+-*/键可调节选中对象的长宽
	 * shrit + \ 重新开始这份配置
	 
	 * wr2 + "子项代码"：生成文件到skinCfgPath对应的路径
	 * wr:$1 + "子项代码"：生成文件到$1对应的路径
	 * call + "子项"：列出当前对象的所有子项供选择
	 * src:$1 + "反向代码":读取$1路径的内容显示反向代码
	 * src2 + "反向代码"：读取skinCfgPath对应的路径反向代码
	 * clear + "删除元素"：清选中容器下的所有对象
	 */
	-->
	
	<!-- 解析方式，0,解析xml; 1,解析成as的数组格式; 2,解析json;  -->
	<parseMode>0</parseMode>
	
	<!-- 是否紧凑显示属性字段  -->
	<IS_NEAR>1</IS_NEAR>
	
	<!-- 需要生成的属性名 -->
	<REF_ATTR_LS>x,y,width,height,uiType,bgSrc,_bgSrc,text</REF_ATTR_LS>
	<!-- 需要四舍五入转成整数的属性 -->
	<INIT_ATTR_LS>x,y,width,height</INIT_ATTR_LS>

	
	<!-- 属性字符串生成模板 -->
	<var_tpl>private var _$1:$2;</var_tpl>
	<!-- 属性赋值字符串生成模板 -->
	<var_tpl2>_$1 = cast this.getChildByName("$2");</var_tpl2>
	
	
	<!-- uiType类型 -->
	<uiTypeLs>img,scale9,button,button2,text,resText,list</uiTypeLs>
	
	<!-- 库目录搜索关键字 -->
	<searchKeyLs>all,/skinUI/,/zh_CN/,/mainUI/,/game/</searchKeyLs>
	
	<!-- 皮肤文件路径 -->
	<skinCfgPath>E:/haxe/FirstGame/assets/cfg/skin_$1.xml</skinCfgPath>
	
	<!-- 扫描文件路径 -->
	<scanFile>E:/haxe/FirstGame/assets/resLoadInfo.dt</scanFile>
	
	<!-- 调出编辑界面的快捷键 (调界面是shift+此值,默认是shift+T) -->
	<showKey>84</showKey>
	
	<!-- 是否可编辑子项  -->
	<isChild>1</isChild>
	
	<!-- 是否调用编辑器内置的反向代码  -->
	<isAutoDecode>0</isAutoDecode>
	
	<!-- 是否创建属性对象代码 -->
	<isAttrCode>1</isAttrCode>
	<!-- 是否创建子项对象代码 -->
	<isCreateChild>0</isCreateChild>
	
	<!-- 是否生成默认值为0的属性 -->
	<IS_DO_DEFAULT>0</IS_DO_DEFAULT>
</root>